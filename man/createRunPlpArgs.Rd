% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/createArgFuns.R
\name{createRunPlpArgs}
\alias{createRunPlpArgs}
\title{Create a parameter object for the function runPlp}
\usage{
createRunPlpArgs(minCovariateFraction = 0.001, normalizeData = TRUE,
  modelSettings = PatientLevelPrediction::setLassoLogisticRegression(),
  testSplit = "person", testFraction = 0.25, trainFraction = NULL,
  splitSeed = NULL, nfold = 3, indexes = NULL, savePlpData = FALSE,
  savePlpPlots = TRUE, saveEvaluation = TRUE, verbosity = "INFO",
  timeStamp = FALSE, analysisId = NULL)
}
\arguments{
\item{minCovariateFraction}{The minimum fraction of target population who must have a covariate for it to
be included in the model training}

\item{normalizeData}{Whether to normalise the covariates before training (Default: TRUE)}

\item{modelSettings}{An object of class modelSettings created using one of the
function:setLassoLogisticRegression() A lasso logistic regression model
setGradientBoostingMachine() A gradient boosting machine
setAdaBoost() An ada boost model setRandomForest() A random forest model
setDecisionTree() A decision tree model
setCovNN()) A convolutional neural network model setCIReNN() A recurrent
neural network model setMLP() A neural network model setDeepNN() A deep
neural network model setKNN() A KNN model}

\item{testSplit}{Either 'person' or 'time' specifying the type of evaluation used.'time' find
the date where testFraction of patients had an index after the date and
assigns patients with an index prior to this date into the training set and
post the date into the test set'person' splits the data into test
(1-testFraction of the data) andtrain (validationFraction of the data) sets.
The split is stratified by the class label.}

\item{testFraction}{The fraction of the data to be used as the test set in the patient split
evaluation.}

\item{trainFraction}{A real number between 0 and 1 indicating the train set fraction of the data.
If not set trainFraction is equal to 1 - test}

\item{splitSeed}{The seed used to split the test/train set when using a person type testSplit}

\item{nfold}{The number of folds used in the cross validation (default 3)}

\item{indexes}{A dataframe containing a rowId and index column where the index value of
-1 means in the test set, and positive integer represents the cross
validation fold (default is NULL)}

\item{savePlpData}{Binary indicating whether to save the plpData object (default is FALSE)}

\item{savePlpPlots}{Binary indicating whether to save the performance plots as pdf files
(default is TRUE)}

\item{saveEvaluation}{Binary indicating whether to save the oerformance as csv files (default is
TRUE)}

\item{verbosity}{Sets the level of the verbosity. If the log level is at or higher in priority
than the logger threshold, a message will print. The levels are:
\itemize{
       \item{DEBUG}{Highest verbosity showing all debug statements}
       \item{TRACE}{Showing information about start and end of steps}
       \item{INFO}{Show informative information (Default)}
       \item{WARN}{Show warning messages}
       \item{ERROR}{Show error messages}
       \item{FATAL}{Be silent except for fatal errors}}}

\item{timeStamp}{If TRUE a timestamp will be added to each logging statement. Automatically
switched on for TRACE level.}

\item{analysisId}{Identifier for the analysis. It is used to create, e.g., the result folder.
Default is a timestamp.}
}
\description{
Create a parameter object for the function runPlp
}
\details{
Create an object defining the parameter values.
}
